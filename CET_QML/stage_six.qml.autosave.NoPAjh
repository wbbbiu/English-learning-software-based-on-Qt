import QtQuick 2.15
import QtQuick.Controls 2.15
Item {
    id:stage_six
  anchors.fill:parent
  property var query:{}
  Column{
      anchors.fill:parent
      Text{
          textFormat:Text.RichText
          width:parent.width
          font.pixelSize:parent.height/20
          wrapMode:Text.WordWrap
          text:sentence_deal(query.words,query.cet4s)
          function sentence_deal(word_list,cet4s){
              let sentence=""
              for(let i=0;i<word_list.length;i++){
                  let flag=true;
                  for(let j=0;j<cet4s.length;j++){
                      if(i===cet4s[j].index){
                          sentence=sentence+`<a href="word://${encodeURIComponent(cet4s[j].id)}" style="color: blue; text-decoration: underline;">`+word_list[i]+`</a>`+" "
                         flag=false
                          break
                      }
                  }
                  if(flag===true){
                       sentence +=word_list[i]+" ";
                  }
              }
              return sentence
          }
          onLinkActivated: function(link) {
                    if (link.startsWith("word://")) {
                        let id = decodeURIComponent(link.split("word://")[1]);
                        AC.word_show(id,2,query)
                    }
                }
      }
      Item{
          width:parent.width
          height:parent.height/2
      }

      Button {
          id: next_btn
          anchors.horizontalCenter:parent.horizontalCenter
          contentItem: Text {
              anchors.fill: parent
              horizontalAlignment: Text.AlignHCenter
              text: "下一个"
              font.pixelSize: stage_six.height /18
          }
          background: Rectangle {
              radius: 15
              color: "#00000000"
          }
          onClicked: {
             
                 if(sql_op.sentence_next()){
                    AC.nextPage()
                    }else{
                      if(sql_op.type==1){
                          sql_op.learn_finish()
                         completeDialog.open()
                      }else{
                          sql_
                      }
                    }
             
          }
      }

  }
  Dialog {
          id: completeDialog
          title: "学习完成"
          modal: true
          width: contentWidth // 设置为父级宽度的80%
          height: contentHeight // 根据内容自动调整高度
          x: (parent.width - width) / 2
          y: (parent.height - height) / 2
          contentItem: Column {
              spacing: 10
              width: parent.width * 0.7 // 内容宽度设置为对话框宽度的90%
              Text {
                  id:complete_text
                  text: "恭喜您，学习已完成！"
                  font.pixelSize: parent.height / 30 // 更改字体大小以适应对话框
                  color: "black"
              }

              Button {
                  text: "返回主界面"
                  onClicked: {
                      AC.back_home()
                      completeDialog.close()
                  }
                  background: Rectangle {
                      radius: 5
                      color: "#e0e0e0"
                  }
              }
          }
      }
}
